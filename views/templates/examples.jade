mixin section(klass, headline, graph)
  h2.block(class=klass || '')= headline
  p.block= graph

+section(
  "",
  "Example Notebooks",
  ""
)

p.block
  | The following links are to static copies of notebooks on our sharing
  | server.  On each page, you can view the contents of the notebook and
  | interact with it, but you can't change the contents or
  | run any code.  If you would like to change the content, you can
  | download the notebook from the sharing server and open it in Beaker.

.list-container.padded
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/e21582541d7c1fe60eb4', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'd3'])")
          img(src='img/example2-d3.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/e21582541d7c1fe60eb4', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'd3'])")
          h4 Python, HTML, Javascript, and d3
        p.tagline Beaker Development Team
        p.
          This notebook creates a random network with Python, and then visualizes it with an interactive forced-directed graph by using the d3 library.

        ul.languages
          li.python.language
            .lang-block Py
          li.javascript.language
            .lang-block Js
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/ee2a39c529e07ae3c2ca', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'ParkingTix'])")
          img(src='img/example-parkingtickets.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/ee2a39c529e07ae3c2ca', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'ParkingTix'])")
          h4 NYC Parking Ticket Analysis
        p.author Ben Wellington
        p.tagline I Quant NY
        p.
          This notebook provides an exploration of NYC parking ticket data. The example illustrates the use of basic statistics to uncover interesting artifacts of the data in aggregate, as well as showing how to perform isolated analysis of individual types of parking violations.

        ul.languages
          li.python.language
            .lang-block Py
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/cc8c05f56c10fdff4002', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'Recycling'])")
          img(src='img/example-recycling.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/cc8c05f56c10fdff4002', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'Recycling'])")
          h4 NYC Recycling Data
        p.author Ben Wellington
        p.tagline I Quant NY
        p.
          This notebook explores NYC recycling using basic statistics and a recycling dataset made publicly available by the city of New York. The language of choice here is IPython, with pandas.

        ul.languages
          li.python.language
            .lang-block Py
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/44e82316e785746165a6', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'p5js'])")
          img(src='img/example-p5js.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/44e82316e785746165a6', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'p5js'])")
          h4 Processing with p5.js
        p.author Berzelius Beaker 
        p.tagline Phlogiston Labs
        p.
          P5.js is the javascript reimplementation of the legendary Processing animation and visualization language. This example is right out of the p5.js documentation. The notebook also shows how to load and use an external javascript library.

        ul.languages
          li.javascript.language
            .lang-block Js
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/a400a57f2bf13966d77e', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'CitiBike'])")
          img(src='img/example-citibike.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/a400a57f2bf13966d77e', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'CitiBike'])")
          h4 NYC Citi Bike Data
        p.author Ben Wellington
        p.tagline I Quant NY
        p.
          This notebook provides an example of how to mine publicly available Citi Bike data, using basic statistics to uncover interesting patterns. It uses IPython as the language of choice (with pandas and numpy). There's also some Groovy at the end to show how data can be passed between languages.
        ul.languages
          li.python.language
            .lang-block Py
          li.groovy.language
            .lang-block Gv
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/6b7ed3d9c5f120193fa9', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'PythonDemo'])")
          img(src='img/example-python.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/6b7ed3d9c5f120193fa9', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'PythonDemo'])")
          h4 Python Demo
        p.tagline Beaker Development Team
        p.
          IPython is the Python language with extensions for interactivity.  This notebook graphs a math function, Then downloads data from the internet, processes, and charts it. The data is saved in the notebook in addition to this text, the code, and the charts. That way later you can rerun the charts without depending on the internet query to be available and give the same results. This ability to easily save data in the notebook makes your work more reproducible.
        ul.languages
          li.python.language
            .lang-block Py

  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/682f08abdf5374828b0b', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'RDemo'])")
          img(src='img/example-r.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/682f08abdf5374828b0b', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'RDemo'])")
          h4 R Demo
        p.tagline Beaker Development Team
        p.
          The R Project for Statistical Computing publishes GNU R. It can be installed along with Beaker by following the instructions on the Getting Started page of this website. This example notebook provides a brief tour of some of the great things you can do with R.

        ul.languages
          li.r.language
            .lang-block R

  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/1e02d117e8e244a03073', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'Autotranslation'])")
          img(src='img/example-autotranslation.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/1e02d117e8e244a03073', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'Autotranslation'])")
          h4 Autotranslation
        p.tagline Beaker Development Team
        p.
          Beaker can autotranslate variables in one language to another.  You can access this feature with the notebook namespace: a collection of variables and their values stored in the notebook.  You can use this to produce data in one language, and consume or process it in another.  Because the namespace is in the notebook, the variable's values are preserved when you save a notebook to disk, or share it on the web. The format for data interchange is JSON. The languages that are supported include IPython, Python3, R, Java, Groovy, Scala, KDB and JavaScript.

        ul.languages
          li.r.language
            .lang-block R
          li.javascript.language
            .lang-block Js
          li.groovy.language
            .lang-block Gv
          li.python.language
            .lang-block Py

  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/7df554918e7415f1da2c', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'py23'])")
          img(src='img/example-py23.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/7df554918e7415f1da2c', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'py23'])")
          h4 Simultaneous Python2 and Python3
        p.author Berzelius Beaker 
        p.tagline Phlogiston Labs
        p.
          Run two different versions of Python at the same time, and communicate data between them.  In this example, we scrape the web with the venerable mechanize library which is available in Python2 only, but then we process the results with Python3 with better Unicode handling.

        ul.languages
          li.python.language
            .lang-block Py
          li.python.language
            .lang-block Py

  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/3fcbb2e8c0d67079d313', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'InteractiveCharts'])")
          img(src='img/example-charting.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/3fcbb2e8c0d67079d313', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'InteractiveCharts'])")
          h4 Interactive Charts
        p.author Bowen Yu
        p.tagline NYU
        p.
          Beaker comes with its own charting library for creating interactive plots.  It is implemented in JavaScript and takes the specification for the plot to make and the data to plot in JSON.  You can access it from any language, but it's easiest with Groovy, and this tutorial will show you how.  See the Levels of Detail tutorial for how to handle charts with many points.



        ul.languages
          li.groovy.language
            .lang-block Gv

  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/4855d54bba77ff51e5cc', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'LevelOfDetail'])")
         img(src='img/example-lod.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/4855d54bba77ff51e5cc', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'LevelOfDetail'])")
          h4 Charts with Level of Detail
        p.tagline Beaker Development Team
        p.
          Although the interactivity and high resolution you get from Beaker's charting library are great, creating DOM elements for every single data point is memory and CPU intensive.  If implemented naively, your web browser would become sluggish or freeze if you tried to chart too much data.  Fortunately, Beaker recognizes this situation and has a solution: Levels of Detail.  If there are more than 1500 points, then instead of drawing them all, Beaker combines points into groups, and represents each group with its average, a box, or a river (min, max, and average).  But then, as you zoom into the data, it is resampled as appropriate for the current view, so the closer you look, the more there is to see, but you can still pull out and get the big picture while keeping the frame rate high.

        ul.languages
          li.groovy.language
            .lang-block Gv
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/a2bab6d6804cba68c557', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'js'])")
          img(src='img/example-js.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/a2bab6d6804cba68c557', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'js'])")
          h4 JavaScript Demo
        p.author Berzelius Beaker 
        p.tagline Phlogiston Labs
        p.
          JavaScript is the language built-in to web browsers. It's great for visualization and interaction, and also is used for glue and scripting in Beaker. This notebook runs the Game of Life, computes the live ratio of this complex system, and then uses a deferred object to report the result of asynchronous JavaScript back to the notebook. It also shows how to print output from JavaScript, and how to manipulate data frames.

        ul.languages
          li.javascript.language
            .lang-block Js
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/8edaae4e89c07c501319', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'node'])")
          img(src='img/example-node.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/8edaae4e89c07c501319', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'node'])")
          h4 Node Demo
        p.author Berzelius Beaker 
        p.tagline Phlogiston Labs
        p.
          Node is programmable in JavaScript and is powered by Chrome's V8 runtime, but runs on the server as a backend. Node uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices. This notebook shows how you can write a client and a server on the same page, and watch them communicate.

        ul.languages
          li.node.language
            .lang-block N
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/28b952a0fe495e5422f5', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'julia'])")
          img(src='img/example-julia.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/28b952a0fe495e5422f5', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'julia'])")
          h4 Julia Demo
        p.author Berzelius Beaker 
        p.tagline Phlogiston Labs
        p.
          Julia is a high-level, high-performance dynamic programming language for technical computing. It provides a sophisticated compiler, distributed parallel execution, numerical accuracy, and an extensive mathematical function library. The library, largely written in Julia itself, also integrates mature, best-of-breed C and Fortran libraries for linear algebra, random number generation, signal processing, and string processing. 

        ul.languages
          li.julia.language
            .lang-block Jl

  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/aecfec8d4589e1108da3', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'text'])")
          img(src='img/example-text.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/aecfec8d4589e1108da3', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'text'])")
          h4 Text, Unicode, Formatting, and Equations
        p.author Berzelius Beaker 
        p.tagline Phlogiston Labs
        p.
          Beaker has three kinds of cells for text: Markdown, HTML and LaTeX.  You can put LaTeX, Unicode, and basic HTML inline in Markdown.

        ul.languages
          li.html5.language
            .lang-block Ht
          li.latex.language
            .lang-block La
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/0b96e5ee9682e7bc8981', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'web'])")
          img(src='img/example-web.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/0b96e5ee9682e7bc8981', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'web'])")
          h4 Generating and accessing web content
        p.author Diego Torres
        p.tagline Beaker Development Team
        p.
          This tutorial creates an animated GIF in R and then displays it in an HTML cell. The key to generating files and then accessing them from HTML is to save them in ~/.beaker/v1/web, and then refer to them via /user. For example, the URL of the GIF below is /user/animation.gif.

        ul.languages
          li.r.language
            .lang-block R
          li.javascript.language
            .lang-block Js
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/3b8446729762ab626640', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'forms'])")
          img(src='img/example-form.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/3b8446729762ab626640', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'forms'])")
          h4 Filling out a Form
        p.tagline Beaker Development Team
        p.
          This tutorial shows a basic example of creating a form with HTML and JavaScript, which causes some Python code to be run, and look up a definition on Wikipedia.

        ul.languages
          li.html5.language
            .lang-block Ht
          li.javascript.language
            .lang-block Js
          li.python.language
            .lang-block Py
  .col.example.list-container-item
    .contents
      .col-1-3
        a(href='http://sharing.beakernotebook.com/gist/anonymous/f3a7624b3906f48ecfd9', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'pyspark'])")
          img(src='img/example-pyspark.jpg')
      .col-2-3
        a.headline(href='http://sharing.beakernotebook.com/gist/anonymous/f3a7624b3906f48ecfd9', target="_blank", onClick="_gaq.push(['_trackEvent', 'Examples', 'Click', 'pyspark'])")
          h4 PySpark Demo
        p.tagline Beaker Development Team
        p.
          Beaker is compatible with Spark, the interactive, general-purpose cluster computing system.

        ul.languages
          li.python.language
            .lang-block Py

  .cl
